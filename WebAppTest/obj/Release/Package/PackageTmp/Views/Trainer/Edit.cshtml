@model WebAppTest.Models.Trainer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="x_title">
    <h2>Update Trainer</h2>
    <div class="clearfix"></div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="x_content">
        <br />
        <div class="item form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.TrainerID, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.TrainerID, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TrainerID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="item form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.UserName, "UserName", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="item form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="item form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="item form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="item form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="ln_solid"></div>
        <div class="item form-group">
            <div>
                <input type="submit" value="Save" class="btn btn-secondary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}
